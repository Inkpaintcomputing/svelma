{
  "version": 3,
  "file": "tag.61efa232.css",
  "sources": [
    "../../../../../../src/routes/components/tag.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\n  export async function preload() {\n    const tagRes = await this.fetch(`components/tag.json`);\n    const taglistRes = await this.fetch(`components/taglist.json`);\n    const jsdocTag = await tagRes.json();\n    const jsdocTaglist = await taglistRes.json();\n\n    return { jsdocTag, jsdocTaglist };\n  }\n</script>\n\n<script>\n  import {Tag, Taglist} from 'svelma'\n  import DocHeader from '../../components/DocHeader.svelte'\n  import Example from '../../components/Example.svelte'\n  import JSDoc from '../../components/JSDoc.svelte'\n\n  export let jsdocTag\n  export let jsdocTaglist\n\n  let isTag1Active = true\n  let isTag2Active = true\n  let isTag3Active = true\n</script>\n\n<style>\n.tags {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n\n.closing-tags {\n  display: table;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n\n.sub-text {\n  margin-bottom: 20px;\n}\n\n</style>\n\n<DocHeader title=\"Tag\" subtitle=\"Tag labels to insert anywhere\"/>\n\n<Example code={`\n  <script>\n    import { Tag } from 'svelma'\n  </script>\n\n  <Tag>Tag label</Tag>\n  <Tag rounded>Rounded tag label</Tag>`}>\n  \n  <div slot=\"preview\">\n    <div class=\"tags\">\n      <Tag>Tag label</Tag>\n      <Tag rounded>Rounded tag label</Tag>\n    </div>\n  </div>\n\n</Example>\n\n\n<hr class=\"is-medium\">\n<p class=\"sub-text\">Closable tags have a button that can be focused, it emits a close event when clicked or when delete key is pressed.</p>\n<p class=\"title is-4\">Closable</p>\n\n<Example code={`\n  <script>\n    import { Tag } from 'svelma'\n    \n    let isTag1Active = true\n    let isTag2Active = true\n    let isTag3Active = true\n  </script>\n\n  <div class=\"field\">\n    {#if isTag1Active}\n      <Tag  type=\"is-primary\" \n            closable \n            on:close={e => isTag1Active = false}>\n        Colored closable tag label\n      </Tag>\n    {/if}\n  </div>\n\n  <div class=\"field\">\n    {#if isTag2Active}\n      <Tag  attached closable \n            on:close={e => isTag2Active = false}>\n        Attached closable tag label\n      </Tag>\n    {/if}\n  </div>\n\n  <div class=\"field\">\n    {#if isTag3Active}\n    <Tag  type=\"is-danger\" \n          attached closable \n          on:close={e => isTag3Active = false}>\n      Colored attached closable tag label\n    </Tag>\n    {/if} \n  </div>`}>\n  \n  <div slot=\"preview\">\n    <div class=\"closing-tags\">\n      <div class=\"field\">\n        {#if isTag1Active}\n        <Tag type=\"is-primary\" closable on:close={e => isTag1Active = false}>Colored closable tag label</Tag>\n        {/if}\n      </div>\n\n      <div class=\"field\">\n        {#if isTag2Active}\n        <Tag attached closable on:close={e => isTag2Active = false}>Attached closable tag label</Tag>\n        {/if}\n      </div>\n\n      <div class=\"field\">\n        {#if isTag3Active}\n        <Tag type=\"is-danger\" attached closable on:close={e => isTag3Active = false}>Colored attached closable tag label</Tag>\n        {/if}\n      </div>\n    </div>\n  </div>\n\n</Example>\n\n\n<hr class=\"is-medium\">\n<p class=\"title is-4\">Taglist</p>\n\n\n<Example code={`\n  <script>\n    import { Tag, Taglist } from 'svelma'\n  </script>\n\n  <Taglist>\n    <Tag type='is-info'>First</Tag>\n    <Tag type='is-info'>Second</Tag>\n    <Tag type='is-info'>Third</Tag>\n    <Tag type='is-info'>Fourth</Tag>\n    <Tag type='is-info'>Fifth</Tag> \n  </Taglist>`}>\n  \n  <div slot=\"preview\">\n    <Taglist>\n      <Tag type='is-info'>First</Tag>\n      <Tag type='is-info'>Second</Tag>\n      <Tag type='is-info'>Third</Tag>\n      <Tag type='is-info'>Fourth</Tag>\n      <Tag type='is-info'>Fifth</Tag>\n    </Taglist>\n  </div>\n\n</Example>\n\n<hr class=\"is-medium\">\n<p class=\"sub-text\">Use the <code>attached</code> prop to attach tags together.</p>\n\n<Example code={`\n  <script>\n    import { Tag, Taglist } from 'svelma'\n  </script>\n\n  <Taglist attached>\n    <Tag type='is-dark'>npm</Tag>\n    <Tag type='is-info'>0.2.1</Tag>\n  </Taglist>`}>\n  \n  <div slot=\"preview\">\n    <Taglist attached>\n      <Tag type='is-dark'>npm</Tag>\n      <Tag type='is-info'>0.2.1</Tag>\n    </Taglist>\n  </div>\n\n</Example>\n\n<hr class=\"is-medium\" />\n\n<h2 class=\"title is-4 is-spaced\">API</h2>\n\n<h3 class=\"subtitle\">Tag</h3>\n<JSDoc jsdoc={jsdocTag} showHeader={false}></JSDoc>\n\n<br>\n<br>\n\n<h3 class=\"subtitle is-spaced\">Taglist</h3>\n<JSDoc jsdoc={jsdocTaglist} showHeader={false}></JSDoc>"
  ],
  "names": [],
  "mappings": "AA0BA,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,CACnB,aAAa,CAAE,KAAK,CAChB,eAAe,CAAE,UAAU,CACnC,aAAa,CAAE,IAAI,CACf,SAAS,CAAE,IAAI,AACrB,CAAC,AAED,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,KAAK,CACnB,aAAa,CAAE,KAAK,CAChB,eAAe,CAAE,UAAU,CACnC,aAAa,CAAE,IAAI,CACf,SAAS,CAAE,IAAI,AACrB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,aAAa,CAAE,IAAI,AACrB,CAAC"
}